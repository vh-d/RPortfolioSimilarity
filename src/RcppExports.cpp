// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// allPairsRcpp
IntegerMatrix allPairsRcpp(int n);
RcppExport SEXP RPortfolioSimilarity_allPairsRcpp(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(allPairsRcpp(n));
    return rcpp_result_gen;
END_RCPP
}
// restRandMatUnif
NumericMatrix restRandMatUnif(NumericMatrix original_mat, long int max_iter);
RcppExport SEXP RPortfolioSimilarity_restRandMatUnif(SEXP original_matSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type original_mat(original_matSEXP);
    Rcpp::traits::input_parameter< long int >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(restRandMatUnif(original_mat, max_iter));
    return rcpp_result_gen;
END_RCPP
}
// restRandMatLNorm
NumericMatrix restRandMatLNorm(NumericMatrix original_mat, long int max_iter, double meanl, double sdl);
RcppExport SEXP RPortfolioSimilarity_restRandMatLNorm(SEXP original_matSEXP, SEXP max_iterSEXP, SEXP meanlSEXP, SEXP sdlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type original_mat(original_matSEXP);
    Rcpp::traits::input_parameter< long int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type meanl(meanlSEXP);
    Rcpp::traits::input_parameter< double >::type sdl(sdlSEXP);
    rcpp_result_gen = Rcpp::wrap(restRandMatLNorm(original_mat, max_iter, meanl, sdl));
    return rcpp_result_gen;
END_RCPP
}
// restRandMatGamma
NumericMatrix restRandMatGamma(NumericMatrix original_mat, long int max_iter, double shape, double rate);
RcppExport SEXP RPortfolioSimilarity_restRandMatGamma(SEXP original_matSEXP, SEXP max_iterSEXP, SEXP shapeSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type original_mat(original_matSEXP);
    Rcpp::traits::input_parameter< long int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    rcpp_result_gen = Rcpp::wrap(restRandMatGamma(original_mat, max_iter, shape, rate));
    return rcpp_result_gen;
END_RCPP
}
// restRandMat
NumericMatrix restRandMat(NumericMatrix original_mat, long int max_iter, int type, double par1, double par2);
RcppExport SEXP RPortfolioSimilarity_restRandMat(SEXP original_matSEXP, SEXP max_iterSEXP, SEXP typeSEXP, SEXP par1SEXP, SEXP par2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type original_mat(original_matSEXP);
    Rcpp::traits::input_parameter< long int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type par1(par1SEXP);
    Rcpp::traits::input_parameter< double >::type par2(par2SEXP);
    rcpp_result_gen = Rcpp::wrap(restRandMat(original_mat, max_iter, type, par1, par2));
    return rcpp_result_gen;
END_RCPP
}
// vCosSimilarity
double vCosSimilarity(NumericVector a, NumericVector b);
RcppExport SEXP RPortfolioSimilarity_vCosSimilarity(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(vCosSimilarity(a, b));
    return rcpp_result_gen;
END_RCPP
}
// wtVCosSimilarity
double wtVCosSimilarity(NumericVector a, NumericVector b, NumericVector w);
RcppExport SEXP RPortfolioSimilarity_wtVCosSimilarity(SEXP aSEXP, SEXP bSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(wtVCosSimilarity(a, b, w));
    return rcpp_result_gen;
END_RCPP
}
// sftVCosSimilarity
double sftVCosSimilarity(NumericVector a, NumericVector b, NumericMatrix weights);
RcppExport SEXP RPortfolioSimilarity_sftVCosSimilarity(SEXP aSEXP, SEXP bSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(sftVCosSimilarity(a, b, weights));
    return rcpp_result_gen;
END_RCPP
}
// mCosSimilarity
NumericMatrix mCosSimilarity(NumericMatrix input_mat);
RcppExport SEXP RPortfolioSimilarity_mCosSimilarity(SEXP input_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input_mat(input_matSEXP);
    rcpp_result_gen = Rcpp::wrap(mCosSimilarity(input_mat));
    return rcpp_result_gen;
END_RCPP
}
// wtMCosSimilarity
NumericMatrix wtMCosSimilarity(NumericMatrix input_mat, NumericVector weights);
RcppExport SEXP RPortfolioSimilarity_wtMCosSimilarity(SEXP input_matSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input_mat(input_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(wtMCosSimilarity(input_mat, weights));
    return rcpp_result_gen;
END_RCPP
}
// sftMCosSimilarity
NumericMatrix sftMCosSimilarity(NumericMatrix input_mat, NumericMatrix weights);
RcppExport SEXP RPortfolioSimilarity_sftMCosSimilarity(SEXP input_matSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input_mat(input_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(sftMCosSimilarity(input_mat, weights));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"RPortfolioSimilarity_allPairsRcpp", (DL_FUNC) &RPortfolioSimilarity_allPairsRcpp, 1},
    {"RPortfolioSimilarity_restRandMatUnif", (DL_FUNC) &RPortfolioSimilarity_restRandMatUnif, 2},
    {"RPortfolioSimilarity_restRandMatLNorm", (DL_FUNC) &RPortfolioSimilarity_restRandMatLNorm, 4},
    {"RPortfolioSimilarity_restRandMatGamma", (DL_FUNC) &RPortfolioSimilarity_restRandMatGamma, 4},
    {"RPortfolioSimilarity_restRandMat", (DL_FUNC) &RPortfolioSimilarity_restRandMat, 5},
    {"RPortfolioSimilarity_vCosSimilarity", (DL_FUNC) &RPortfolioSimilarity_vCosSimilarity, 2},
    {"RPortfolioSimilarity_wtVCosSimilarity", (DL_FUNC) &RPortfolioSimilarity_wtVCosSimilarity, 3},
    {"RPortfolioSimilarity_sftVCosSimilarity", (DL_FUNC) &RPortfolioSimilarity_sftVCosSimilarity, 3},
    {"RPortfolioSimilarity_mCosSimilarity", (DL_FUNC) &RPortfolioSimilarity_mCosSimilarity, 1},
    {"RPortfolioSimilarity_wtMCosSimilarity", (DL_FUNC) &RPortfolioSimilarity_wtMCosSimilarity, 2},
    {"RPortfolioSimilarity_sftMCosSimilarity", (DL_FUNC) &RPortfolioSimilarity_sftMCosSimilarity, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RPortfolioSimilarity(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
